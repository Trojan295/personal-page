<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>devops on myhightech.org</title><link>https://myhightech.org/tags/devops/</link><description>Recent content in devops on myhightech.org</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 02 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://myhightech.org/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Integrating Cert Manager with Route53 on EKS</title><link>https://myhightech.org/posts/20210402-cert-manager-on-eks/</link><pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate><guid>https://myhightech.org/posts/20210402-cert-manager-on-eks/</guid><description>Integrating Cert Manager with Route53 on EKS In this article I will show, how you can automatically get Let&amp;rsquo;s Encrypt SSL certificates using Cert Manager. We will leverage the DNS01 challenge and use a Route53 Hosted Zone to answer the challenge. The Cert Manager will use an EKS IAM Role Service Account, which follows AWS best practices for security.
Set up the EKS cluster with Terraform We will use this EKS module to provision our EKS cluster.</description></item><item><title>Using AWS SAM and CodeDeploy to deploy serverless applications</title><link>https://myhightech.org/posts/aws-sam-codedeploy/</link><pubDate>Fri, 18 Sep 2020 00:00:00 +0000</pubDate><guid>https://myhightech.org/posts/aws-sam-codedeploy/</guid><description>AWS Serverless Application Model I was recently preparing for my AWS DevOps Engineer exam and I wanted to give AWS Serverless Application Model a try. AWS Serverless Application Model is a framework to build and deploy serverless application on AWS using Lambda, API Gateway and DynamoDB.
Under the hood it is a AWS CloudFormation transform, which expands the CloudFormation syntax and adds additional resources under the AWS::Serverless namespace. During the template provisioning those resources get expanded to basic CloudFormation resources.</description></item></channel></rss>